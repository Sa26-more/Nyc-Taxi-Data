{
	"name": "1_explore_taxi_zone",
	"properties": {
		"folder": {
			"name": "nyc_taxi/discovery"
		},
		"content": {
			"query": "-- This is auto-generated code\nSELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK 'https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = ',',\n        ROWTERMINATOR = '\\n'\n    ) AS [result]\n\n\n--Examine the data type for the column\nEXEC sp_describe_first_result_set N'SELECT\n    TOP 100 *\nFROM\n    OPENROWSET(\n        BULK ''https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv'',\n        FORMAT = ''CSV'',\n        PARSER_VERSION = ''2.0'',\n        HEADER_ROW = TRUE\n    ) AS [result]'\n\n--Find the maximum length of each column elements\nSELECT\n    MAX(LEN(LocationID)) as Len_LocationID,\n    MAX(LEN(Borough)) as Len_Borough,\n    MAX(LEN(Zone)) as Len_Zone,\n    MAX(LEN(service_zone)) as Len_service_zone\nFROM\n    OPENROWSET(\n        BULK 'https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = ',',\n        ROWTERMINATOR = '\\n'\n    ) AS [result]\n\n--Change datatypes and give appropriate length to each columns.\n--LocationID SMALLINT, Borough VARCHAR(15), Zone VARCHAR(50), service_zone VARCHAR(15)\n--With ‘with clause’ provide explicit schema\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = ',',\n        ROWTERMINATOR = '\\n'\n    ) WITH (\n        LocationID SMALLINT, \n        Borough VARCHAR(15), \n        Zone VARCHAR(50), \n        service_zone VARCHAR(15)\n    ) AS [result]\n\n\n--Examine the data type for the column\nEXEC sp_describe_first_result_set N'SELECT\n    *\nFROM\n    OPENROWSET(\n        BULK ''https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv'',\n        FORMAT = ''CSV'',\n        PARSER_VERSION = ''2.0'',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = '','',\n        ROWTERMINATOR = ''\\n''\n    ) WITH (\n        LocationID SMALLINT, \n        Borough VARCHAR(15), \n        Zone VARCHAR(50), \n        service_zone VARCHAR(15)\n    ) AS [result]'\n\nSELECT name, collation_name FROM sys.databases;\n\n--Changing or specifying collation\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = ',',\n        ROWTERMINATOR = '\\n'\n    ) WITH (\n        LocationID SMALLINT, \n        Borough VARCHAR(15) COLLATE Latin1_General_100_CI_AI_SC_UTF8, \n        Zone VARCHAR(50) COLLATE Latin1_General_100_CI_AI_SC_UTF8, \n        service_zone VARCHAR(15) COLLATE Latin1_General_100_CI_AI_SC_UTF8\n    ) AS [result]\n\n--Create new database 'nyc_taxi_discovery'\nCREATE DATABASE nyc_taxi_discovery;\n\n--Use database nyc_taxi_discovery\nUSE nyc_taxi_discovery;\n\n--Specify collation on database\nALTER DATABASE nyc_taxi_discovery COLLATE Latin1_General_100_CI_AI_SC_UTF8;\n\n--Check collation type\nSELECT name, collation_name FROM sys.databases;\n\n--Select only subset of column\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n        FORMAT = 'CSV',\n        PARSER_VERSION = '2.0',\n        HEADER_ROW = TRUE,\n        FIELDTERMINATOR = ',',\n        ROWTERMINATOR = '\\n'\n    ) WITH (\n        Borough VARCHAR(15), \n        Zone VARCHAR(50)\n    ) AS [result]\n\n--Read data from file without header\nSELECT *\nFROM\n    OPENROWSET(\n        BULK 'https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone_without_header.csv',\n        FORMAT = 'CSV'\n\n    ) WITH (\n        Borough VARCHAR(15) 2, \n        Zone VARCHAR(50) 3\n    ) AS [result]\n\n--Making column name consistent\n\nSELECT\n    *\nFROM\nOPENROWSET(\n    BULK 'https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv',\n    FORMAT = 'CSV',\n    PARSER_VERSION = '2.0',\n    FIRSTROW = 2,\n    FIELDTERMINATOR = ',',\n    ROWTERMINATOR = '\\n'\n    ) WITH (\n        location_id SMALLINT 1, \n        borough VARCHAR(15) COLLATE Latin1_General_100_CI_AI_SC_UTF8 2, \n        zone VARCHAR(50) COLLATE Latin1_General_100_CI_AI_SC_UTF8 3, \n        service_zone VARCHAR(15) COLLATE Latin1_General_100_CI_AI_SC_UTF8 4\n    ) AS [result]\n\n--Check data type with sp_describe_first_result_set stored procedure\nEXEC sp_describe_first_result_set N'SELECT\n    *\nFROM\nOPENROWSET(\n    BULK ''https://practicestorageravi.dfs.core.windows.net/nyc-taxi-data/raw/taxi_zone.csv'',\n    FORMAT = ''CSV'',\n    PARSER_VERSION = ''2.0'',\n    FIRSTROW = 2,\n    FIELDTERMINATOR = '','',\n    ROWTERMINATOR = ''\\n''\n    ) WITH (\n        location_id SMALLINT 1, \n        borough VARCHAR(15) 2, \n        zone VARCHAR(50) 3, \n        service_zone VARCHAR(15) 4\n    ) AS [result]'\n\n--Whenever you will get error, change parser version to 1.0 to check error. And modify data type constraints accordingly.\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_discovery",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}